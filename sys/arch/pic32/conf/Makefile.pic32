#
# Makefile for RetroBSD, pic32 target
#
# DEBUG is set to -g by config if debugging is requested (config -g).
#

AS              = ${MIPS_GCC_PREFIX}as ${DEBUG} -mips32r2 -EL
CC              = ${MIPS_GCC_PREFIX}gcc ${DEBUG} -mips32r2 -EL -nostdinc -fno-builtin -fcommon -Wall
CPP             = ${MIPS_GCC_PREFIX}cpp
LD              = ${MIPS_GCC_PREFIX}gcc -mips32r2 -EL
LDFLAGS         = -nostdlib -T ${_confdir}/${LDSCRIPT} -Wl,-Map=$@.map
SIZE            = ${MIPS_GCC_PREFIX}size
OBJCOPY         = ${MIPS_GCC_PREFIX}objcopy
OBJDUMP         = ${MIPS_GCC_PREFIX}objdump

# sources are located via $S relative to the compilation directory
S               = ../../../..

_mach?=		pic32
_arch?=		mips
_machdir?=	$S/arch/${_mach}
_archdir?=	$S/arch/${_arch}
_confdir?=	${_machdir}/conf

include		${_confdir}/compiler.mk

INCLUDES=	-I. -I$S -I$S/arch
DEPFLAGS=	-MT $@ -MP -MD -MF .deps/$*.dep
DEFS=		${INCLUDES} ${PARAM} -DKERNEL ${DEPFLAGS}
CFLAGS=		-O ${DEFS}

# compile rules: rules are named COMPILE_${SUFFIX}
# SUFFIX is the file suffix, capitalized (e.g. C for a .c file).

COMPILE_C       = ${CC} -c ${CFLAGS} $<
COMPILE_S       = ${CC} -c ${DEFS} $<

%OBJS

%CFILES

DEVCFG!=if [ -f devcfg.c ] ; then \
		echo "devcfg.o" ; \
	else \
		echo "" ; \
	fi

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
SYSTEM_OBJ      = locore.o ${OBJS} ioconf.o ${DEVCFG}
SYSTEM_DEP      = Makefile ioconf.c machine sys .deps ${SYSTEM_OBJ}
SYSTEM_LD_HEAD  = sh $S/conf/newvers.sh > vers.c; ${CC} ${CFLAGS} -c vers.c; rm -f $@
SYSTEM_LD       = -@echo ${LD} ${LDFLAGS} '$${SYSTEM_OBJ}' vers.o -o $@; \
                  ${LD} ${LDFLAGS} ${SYSTEM_OBJ} vers.o -o $@
SYSTEM_LD_TAIL  = ${SIZE} $@; cp $@ $@.elf; \
                  $(OBJCOPY) -O ihex --change-addresses=0x80000000 $@ $@.hex; \
                  $(OBJCOPY) -O binary -R .boot -R .config $@ $@.bin; \
                  $(OBJDUMP) -d -S $@ > $@.dis

%LOAD

clean:
	rm -rf .deps unix *.elf *.o *.map *.dis *.bin *.hex machine sys

clean-all: clean
	rm -f *.h ioconf.c swap*.c vers.c

reconfig ioconf.c: Config $S/../tools/bin/config
	$S/../tools/bin/config Config
	$(MAKE) clean

load:   unix
	pic32prog unix.hex

machine:
	ln -s ${_machdir}/include $@

sys:
	ln -s $S/sys $@

.deps:
	mkdir .deps

locore.o: ${_machdir}/${_mach}/locore.S
	${COMPILE_S}

ioconf.o: ioconf.c
	${COMPILE_C}

%RULES

-include .deps/*.dep
